inheritance: 상속, 계승(keisyou)


1. 정의: 기존 클래스의 프로파티, 메서드 등 멤버들을 그대로 상속받아
        새로운 클래스를 정의함. 다중상속 불가능!

    스-파-클래스 <--> 사부클래스
    부모 클래스 <--> 자식 클래스
    상위 클래스 <--> 하위 클래스
    기본 클래스 <--> 파생 클래스

    class sub-class extends super-class {
    }



2. 오-바-라이도
    메서드 오버라이딩: 서브클래스에서 수퍼클래스의 메서드를 재정의

    수퍼클래스의 메서드 명과 같아야 함
    수퍼클래스의 파라메-타-구성(순서, 개수)이 같아야 함
    access 수식자의 허용 레벨을 같거나 더 확대되게 정의!

    서브클래스에서 수퍼클래스의 메서드, 프로퍼티에 접근하기 위해서는:
      parent::프로퍼티_혹은_메서드() // 프로퍼티 접근?

    PHP에서 사부클래스를 인스턴스화할 때 특별히 지정하지 않으면
    수-파- 클래스의 생성자가 호출되지 않는다. parent::__construct();


* 서브클래스에서 수퍼클래스에 접근하는 경우 parent:: 를 사용하며
  생성자를 직접 (parent::__constroduct()) 호출하지 않으면 자동으로 호출하지 않음!

* 오버라이딩 금지 public final function 메서드() {}

* 계승금지 final class 클래스()





3. 포리모-휘즈므
    동일한 이름의 메서드가 상황에 따라 다른 처리가 되도록 하는 것
    장점: 같은 목적의 기능에 대해 다른 메서드명을 기억할 필요가 없게 됨

    ****** 3요소 encapsulation inheritance polymotphism




4. 추상클래스
    폴리모피즘을 위해 상속으로 구현이 가능하지만 불충분하다!
    서브 클래스에서 반드시 오버라이딩한다는 보장이 없기 때문.
    이를 위해 반!드!시! 구현해야 하는 메서드(abstract)를 포함하고 있는 클래스~

    추상메서드: abstract 수식자를 가진 메서드로 정의만 되어 있고 구현부(몸체)는 비어있는!
    구현 = 실장(實裝)
    abstract class 클래스 () public, protected



5. 인타-훼-스: interface 추상메서드만 가진 클래스
    메서드의 내용은 몰라도 사용법만 알려주면 된다! 알았냐! 어!!?
    interface 이름 () {
      const 상수명=값; // 정수(일본어임!) teisuu 精수
      [abstract] [public] function 메서드 ();
    }
    class cl implements 인터페이스, 인터페이스, 인터페이스... {

    }

    상수접근 interface명::상수 / self::상수 둘다 접근 가능!!
    get-class.php
